{
  "name": "Lolcode",
  "tagline": "a GetStart with lolCode sheet - don't laugh too loudly",
  "body": "#1. INTRODUCTION\r\n\r\n\r\nWe're going to be using a website called www.repl.it to have fun with lolcode.\r\n\r\n* Open repl.it (ctrl-left click or right click and open in a new tab) [repl.it/languages/LOLCODE](http://repl.it/languages/LOLCODE)\r\n\r\nDon't forget the buttons in the top bar regularly:\r\n\r\n* Run - when you want to test your code\r\n\r\n* Save - when you think it works and you wanna share\r\n\r\n\r\n![Imgur](http://i.imgur.com/l3EsgJk.png)\r\n\r\n\r\n![catz](http://www.lolcats.com/images/u/11/46/lolcatsdotcomqc2oos4nrd7aymcl.jpg)\r\n\r\n\r\n#2. OUTPUT\r\n\r\n```VISIBLE``` prints to the standard output. \r\n\r\nSo our ubiquitous 'Hello World' program becomes:\r\n\r\n```\r\nHAI 1.2\r\n    VISIBLE \"HAI, WORLD!!!\r\nKTHXBYE\r\n```\r\n\r\n*Add hip comments to your code using BTW for single line comments and OBTW / TLDR for multiline comments, like in my hello world program below.*\r\n\r\n\r\n![Imgur](http://i.imgur.com/Gc6oLcE.png)\r\n\r\n![catz](http://www.lolcats.com/images/u/07/35/lolcatsdotcom8514whl5iwcfrm1k.jpg)\r\n\r\n#3. INPUT\r\n\r\nVariables are declared using ```I HAS A```, and the variables can be initialized on the same line using using ```ITZ```.\r\n\r\nOr we can ask the user for values using ```GIMMEH```. In some systems it brings up a modal dialog box, other systems wait for command line entry.\r\n\r\n```\r\nHAI 1.2\r\n    I HAS A KITTEH\r\n    GIMMEH KITTEH\r\n    VISIBLE \"HAI, \", KITTEH\r\nKTHXBYE\r\n```\r\n\r\n*repl.it waits on the command line, as you can see when I run my program below:*\r\n\r\n\r\n![Imgur](http://i.imgur.com/lAlxL1r.png)\r\n\r\n\r\n![catz](http://www.lolcats.com/images/u/08/50/lolcatsdotcomrq4lywopmz2tyzsb.jpg)\r\n\r\n#4. CONDITIONALS\r\n\r\nThe conditional ```if (Var1 == Var2){}``` is represented as ``` BOTH SAEM Var1 AN Var2``` and ``` O RLY?```, on a new line.\r\n\r\nThe true condition has ```YA RLY``` and, of course, you can do nested conditions with ```GIMME```. Like in the example below:\r\n\r\n```\r\nHAI 1.2\r\n\r\nI HAS A ANIMAL\r\nGIMMEH ANIMAL\r\n\r\nBOTH SAEM ANIMAL AN \"CAT\"\r\nO RLY?\r\n    YA RLY, VISIBLE \"J00 HAV A CAT\"\r\n    MEBBE BOTH SAEM ANIMAL AN \"MAUS\"\r\n        VISIBLE \"NOM NOM NOM. I EATED IT.\"\r\nOIC\r\n\r\nKTHXBYE\r\n```\r\n\r\n*I hope you liek the cool cat code, the results from my program look like this:*\r\n\r\n\r\n![Imgur](http://i.imgur.com/LoJEg1O.png)\r\n\r\n\r\n![catz](http://www.lolcats.com/images/u/08/51/lolcatsdotcomo1gehe7hiqmn05ig.jpg)\r\n\r\n#5. SWITCH STATEMENTS\r\n\r\nMultiple conditions can usually be written more neatly  as a Switch/Case statement, this is represented as ``` Var, WTF? and OMG Val``` for the switch / case.\r\n\r\nSo, the nested conditions of the cat & mouse game from the previous slide can be rewritten like the example below:\r\n\r\n\r\n```\r\nHAI 1.2\r\nI HAS A KITTEH\r\nGIMMEH KITTEN\r\n\r\nKITTEH, WTF?\r\n    OMG \"CAT\"\r\n       VISIBLE \"J00 HAV A CAT\"\r\n       GTFO\r\n    OMG \"MAUS\"\r\n       VISIBLE \"NOM NOM NOM. I EATED IT.\"\r\n       GTFO\r\n    OMGWTF\r\nOIC\r\n\r\nKTHXBYE\r\n```\r\n\r\n\r\n*The results from my code look like this:*\r\n\r\n![Imgur](http://i.imgur.com/nBedbq1.png)\r\n\r\n![catz](http://www.lolcats.com/images/u/08/30/lolcatsdotcomdoozp810tzfcq0up.jpg)\r\n\r\n#6. LOOPS\r\n\r\nLoops are a succinct way of representing repetition, this is represented as ''' IM IN YR LOOP / IM OUTTA YR LOOP'''.\r\n\r\nSo, the classic game of 'I ate a ...' can be rewritten like this:\r\n\r\n\r\n```\r\nHAI 1.2\r\n\r\nI HAS A KITTEH ITZ \"Katz\"\r\nI HAS A IDIOT ITZ 0\r\n\r\nIM IN YR LOOP UPPIN YR IDIOT TIL BOTH SAEM AN 10\r\n   BOTH SAEM IDIOT AN 8, O RLY?\r\n      YA RLY\r\n         VISIBLE \"COOL, I ATE A \", KITTEH\r\n      NO WAI\r\n         VISIBLE \"COOL! I \" IDIOT \" A \" KITTEH\r\n   OIC\r\nIM OUTTA YR LOOP\r\n\r\nKTHXBYE\r\n```\r\n\r\n*The results from my code look like this:*\r\n\r\n\r\n![Imgur](http://i.imgur.com/fHFRust.png)\r\n\r\n![catz](http://www.lolcats.com/images/u/11/45/lolcatsdotcom3gp6wm7dw3jihq9t.jpg)\r\n\r\n#7. FUNCTIONS\r\n\r\nFunctions are a useful way of putting statements together, so that they are easier to understand and reduce the amount of typing you have to do.\r\n\r\nFunctions are declared using ``` HOW DUZ I FunctionName YR Var / IF U SAY SO```\r\n\r\nSo, our cat & mouse game can be refactored like this:\r\n\r\n```\r\nHAI 1.2\r\n\r\nHOW DUZ I TASTEH YR BEAST\r\n\r\nBEAST, WTF?\r\n    OMG \"CAT\"\r\n       VISIBLE \"J00 HAV A CAT\"\r\n       GTFO\r\n    OMG \"MAUS\"\r\n       VISIBLE \"NOM NOM NOM. I EATED IT.\"\r\n       GTFO\r\n    OMGWTF\r\nOIC\r\n\r\nIF U SAY SO\r\n\r\nI HAS A ANIMAL\r\nGIMME ANIMAL\r\n\r\nTASTEH ANIMAL\r\n\r\nKTHXBYE\r\n```\r\n\r\n*The results of my code look like this:*\r\n\r\n\r\n![Imgur](http://i.imgur.com/HIbI1Rr.png)\r\n\r\n![catz](http://www.lolcats.com/images/u/11/49/lolcatsdotcomii0sbc7g7dpgu21m.jpg)\r\n\r\n#8. A LOL APP\r\n\r\nOk, even though Lolcode is Turing complete, some people don't believe that it is a proper language, so here after all the games let's do some proper work!\r\n\r\nEverybody knows the Fibonacci Sequence, named for Leonado Pisano, who brought the Arabic numerals into European mathematics and the superior technology of Arabic arithmetic that we all learn today.\r\n\r\nFun fact: Leonado Pisano, also known as Fibonacci (son of Bonacci), did absolutely nothing with the sequence that bears his name. But never mind, Fibonacci deserves to be remembered for his great contribution to numberacy.\r\n\r\nThe sequence is 1 1 2 3 5 8 13 21 - each number is given as the some of the previous 2 numbers. 1 + 1 = 2, 1 + 2 = 3 etc\r\n\r\n* This neatly gives the generating function of the sequence,\r\n\r\nIt ain't Poetry but it seems to work - it gives:\r\n\r\n* Fibonacci rule F_n = F_{n-1} + F_{n-2}.\r\n\r\nWhich we can program easily with a function that calls itself twice!\r\n\r\n```lolcode\r\nHAI 1.2\r\n\r\nHOW DUZ I FIBONACCEH YR NUMBEH\r\n  \r\n  I HAS A NUMBE\r\n  I HAS A NUMB\r\n  I HAS A NUMNUM\r\n  NUMBE R DIFF OF NUMBEH AN 1\r\n  NUMB R DIFF OF NUMBE AN 1\r\n  \r\n  NUMBEH, WTF?\r\n    OMG 0\r\n       FOUND YR 0\r\n       GTFO\r\n    OMG 1\r\n       FOUND YR 1\r\n       GTFO\r\n    OMGWTF\r\n       NUMNUM R SUM OF FIBONACCEH NUMBE AN FIBONACCEH NUMB\r\n       FOUND YR NUMNUM\r\n       GTFO\r\n  OIC\r\nIF U SAY SO\r\n\r\nI HAS A LOLCAT ITZ 16\r\nI HAS A VAR ITZ 1\r\n\r\nIM IN YR LOOP UPPIN YR VAR TIL BOTH SAEM VAR AN SUM OF LOLCAT AN 1\r\n   \tVISIBLE FIBONACCEH VAR\r\nIM OUTTA YR LOOP\r\n\r\nKTHXBYE\r\n```\r\n\r\nUnfortuantely, the Lolcode syntax isn't very polished, so I have to declare two intermediate variables to store the values of the previous calls to the Fibonacceh function. Meh.\r\n\r\n*My code and the results of running it look like this:*\r\n\r\n![Imgur](http://i.imgur.com/f9BCX05.png)\r\n\r\n![catz](http://www.lolcats.com/images/u/11/49/lolcatsdotcomii0sbc7g7dpgu21m.jpg)\r\n\r\n#9. Challenges\r\n\r\nSome programming fun, coding challenges:\r\n\r\n* A. Code a generator for '10 green bottles'\r\n\r\n\r\n```\r\n10 Green Bottles sitting on the wall,\r\n\r\nif one green bottle should accidentally fall,\r\n\r\nthere'll be 9 green bottles sitting on the wall\r\n...\r\n```\r\n\r\nIt's quite good fun to go to -10 green bottles, and then count up again.\r\n\r\n\r\n* B. Code a generator for a binary search\r\n\r\nPython can do the [**binary search**](http://openbookproject.net/thinkcs/python/english3e/list_algorithms.html) like this:\r\n\r\n```python\r\ndef search_binary(xs, target):\r\n    \"\"\" Find and return the index of key in sequence xs \"\"\"\r\n    lb = 0\r\n    ub = len(xs)\r\n    while True:\r\n        if lb == ub:   # If region of interest (ROI) becomes empty\r\n           return -1\r\n\r\n        # Next probe should be in the middle of the ROI\r\n        mid_index = (lb + ub) // 2\r\n\r\n        # Fetch the item at that position\r\n        item_at_mid = xs[mid_index]\r\n\r\n        # print(\"ROI[{0}:{1}](size={2}), probed='{3}', target='{4}'\"\r\n        #       .format(lb, ub, ub-lb, item_at_mid, target))\r\n\r\n        # How does the probed item compare to the target?\r\n        if item_at_mid == target:\r\n            return mid_index      # Found it!\r\n        if item_at_mid < target:\r\n            lb = mid_index + 1    # Use upper half of ROI next time\r\n        else:\r\n            ub = mid_index        # Use lower half of ROI next time\r\n\r\n```\r\n\r\nCan you write it in Lolcode?\r\n\r\n\r\n![Imgur](http://i.imgur.com/8bAz4i6.jpg)\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}